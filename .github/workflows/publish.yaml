name: 'publish'

on:
  push:
    branches:
      - master

jobs:
  create-release:
    runs-on: ubuntu-22.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
      version: ${{ steps.get-version.outputs.VERSION }}
      date: ${{ steps.date.outputs.DATE }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: get current date
        id: date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      - name: get version from transform/package.json
        id: get-version
        run: echo "VERSION=$(node -p "require('./transform/package.json').version")" >> $GITHUB_OUTPUT
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `app-v${{ steps.get-version.outputs.VERSION }}`,
              name: `Desktop App v${{ steps.get-version.outputs.VERSION }}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-tauri:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            target/
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ needs.create-release.outputs.date }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ needs.create-release.outputs.date }}
            ${{ matrix.platform }}-cargo-${{ hashFiles('**/Cargo.toml') }}
            ${{ matrix.platform }}-cargo-

      - name: Cache transform node_modules
        uses: actions/cache@v3
        with:
          path: transform/node_modules
          key: ${{ matrix.platform }}-yarn-${{ hashFiles('transform/yarn.lock') }}
          restore-keys: |
            ${{ matrix.platform }}-yarn-${{ hashFiles('transform/yarn.lock') }}

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: install tauri cli
        run: cargo install tauri-cli

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install transform dependencies
        run: cd transform && yarn install

      - name: build tauri app
        run: cargo tauri build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  publish-release:
    runs-on: ubuntu-22.04
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
